(dp1
S'login'
p2
S''
sS'question_timer'
p3
I1309586700
sS'answer_list'
p4
(lp5
(dp6
S'argvs'
p7
(dp8
sS'code'
p9
(dp10
sS'stdout'
p11
(dp12
sS'stdin'
p13
(dp14
sa(dp15
S'argvs'
p16
(dp17
sS'code'
p18
(dp19
sS'stdout'
p20
(dp21
sS'stdin'
p22
(dp23
sa(dp24
S'argvs'
p25
(dp26
sS'code'
p27
(dp28
sS'stdout'
p29
(dp30
sS'stdin'
p31
(dp32
sa(dp33
S'argvs'
p34
(dp35
sS'code'
p36
(dp37
sS'stdout'
p38
(dp39
sS'stdin'
p40
(dp41
sa(dp42
S'argvs'
p43
(dp44
sS'code'
p45
(dp46
sS'stdout'
p47
(dp48
sS'stdin'
p49
(dp50
sa(dp51
S'argvs'
p52
(dp53
sS'code'
p54
(dp55
sS'stdout'
p56
(dp57
sS'stdin'
p58
(dp59
sasS'quiz'
p60
(ica_quiz
quiz
p61
(dp62
S'question_list'
p63
(lp64
(ica_question
input_output
p65
(dp66
S'stdin_template'
p67
S''
sS'argvs'
p68
S''
sS'code_template'
p69
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n\tswap_count = 0;\n\n\tfor (i = 0; i < n-1; i++) {\n\t\tfor (j = n-1; j > i; j--) {\n\t\t\tif (a[j] < a[j-1]) {\n\t\t\t\ttemp = a[j];\n\t\t\t\ta[j] = a[j-1];\n\t\t\t\ta[j-1] = temp;\n\n\t\t\t\tswap_count++;\n                        }\n                }\n        }\n\tprintf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n           int a[3] = {3,1,2};\n\n           bubble_sort(a,3);\n\n\treturn 0;\n}\n'
p70
sS'mark'
p71
I1
sS'parameter_types'
p72
(dp73
S'code'
p74
(dp75
S'$i0'
p76
S'int'
p77
sS'$i1'
p78
g77
sS'$i2'
p79
g77
ssS'stdout'
p80
(dp81
S'$y0'
p82
g77
sssS'stdout_template'
p83
S'2\n'
p84
sS'path'
p85
S'/home/jacobbl/SENG265/exercise2_download/codeAct_1.01/code_library/bubble_sort_swap_count_0'
p86
sS'type'
p87
S'Input/output'
p88
sba(ica_question
input_output
p89
(dp90
g67
S''
sg68
S''
sg69
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n\tswap_count = 0;\n\n        for (i = 1; i < n; i++) {\n                j = i;\n                while (j > 0 && a[j-1] > a[j]) {\n                        temp = a[j];\n                        a[j] = a[j-1];\n                        a[j-1] = temp;\n                        j--;\n\n\t\t\tswap_count++;\n                }\n        }\n\tprintf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n           int a[3] = {3,1,2};\n\n           insertion_sort(a,3);\n\n\treturn 0;\n}\n'
p91
sg71
I1
sg72
(dp92
g74
(dp93
S'$i0'
p94
g77
sS'$i1'
p95
g77
sS'$i2'
p96
g77
ssg80
(dp97
S'$y0'
p98
g77
sssg83
S'2\n'
p99
sg85
S'/home/jacobbl/SENG265/exercise2_download/codeAct_1.01/code_library/insertion_sort_swap_count_0'
p100
sg87
S'Input/output'
p101
sba(ica_question
input_output
p102
(dp103
g67
S''
sg68
S''
sg69
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n\tswap_count = 0;\n\n        for (i = 0; i < n-1; i++) {\n                for (j = i + 1; j < n; j++) {\n                        if (a[i] > a[j]) {\n                                temp = a[i];\n                                a[i] = a[j];\n                                a[j] = temp;\n\n\t\t\t\tswap_count++;\n                        }\n                }\n        }\n\tprintf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n           int a[3] = {3,1,2};\n\n           selection_sort(a,3);\n\n\treturn 0;\n}\n'
p104
sg71
I1
sg72
(dp105
g80
(dp106
S'$y0'
p107
g77
sssg83
S'2\n'
p108
sg85
S'/home/jacobbl/SENG265/exercise2_download/codeAct_1.01/code_library/selection_sort_swap_count_0'
p109
sg87
S'Input/output'
p110
sba(ica_question
input_output
p111
(dp112
g67
S''
sg68
S''
sg69
S'#include &lt;stdio.h>\n\nint index_of(int b[], int n, int x)\n{\n        int i;\n\n        for(i = 0; i < n; i++)\n        {\n                if(b[i] == x)\n                        return i;\n        }\n        return -1;\n}\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,temp;\n\n        printf("%d\\n", index_of(a, n, 1));\n\n        for (i = 0; i < n-1; i++) {\n                for (j = n-1; j > i; j--) {\n                        if (a[j] < a[j-1]) {\n                                temp = a[j];\n                                a[j] = a[j-1];\n                                a[j-1] = temp;\n\n                                printf("%d\\n", index_of(a, n, 1));\n                        }\n                }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n\nint x = 1;\nint a[3] = {3,x,2};\n\nbubble_sort(a,3);\n\n\treturn 0;\n}\n'
p113
sg71
I1
sg72
(dp114
g74
(dp115
S'$x'
p116
g77
sS'$i0'
p117
g77
sS'$i1'
p118
g77
sS'$i2'
p119
g77
ssg80
(dp120
S'$y0'
p121
g77
sS'$y1'
p122
g77
sS'$y2'
p123
g77
sssg83
S'1\n0\n0\n'
p124
sg85
S'/home/jacobbl/SENG265/exercise2_download/codeAct_1.01/code_library/bubble_sort_min_position_0'
p125
sg87
S'Input/output'
p126
sba(ica_question
input_output
p127
(dp128
g67
S''
sg68
S''
sg69
S'#include &lt;stdio.h>\n\nint index_of(int b[], int n, int x)\n{\n        int i;\n\n        for(i = 0; i < n; i++)\n        {\n                if(b[i] == x)\n                        return i;\n        }\n        return -1;\n}\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,temp;\n\n        printf("%d\\n", index_of(a, n, 1));\n\n        for (i = 1; i < n; i++) {\n                j = i;\n                while (j > 0 && a[j-1] > a[j]) {\n                        temp = a[j];\n                        a[j] = a[j-1];\n                        a[j-1] = temp;\n                        j--;\n\n                        printf("%d\\n", index_of(a, n, 1));\n                }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n\nint x = 1;\nint a[3] = {3,x,2};\n\ninsertion_sort(a,3);\n\n\treturn 0;\n}\n'
p129
sg71
I1
sg72
(dp130
g74
(dp131
S'$x'
p132
g77
sS'$i0'
p133
g77
sS'$i1'
p134
g77
sS'$i2'
p135
g77
ssg80
(dp136
S'$y0'
p137
g77
sS'$y1'
p138
g77
sS'$y2'
p139
g77
sssg83
S'1\n0\n0\n'
p140
sg85
S'/home/jacobbl/SENG265/exercise2_download/codeAct_1.01/code_library/insertion_sort_min_position_0'
p141
sg87
S'Input/output'
p142
sba(ica_question
input_output
p143
(dp144
g67
S''
sg68
S''
sg69
S'#include &lt;stdio.h>\n\nint index_of(int b[], int n, int x)\n{\n        int i;\n\n        for(i = 0; i < n; i++)\n        {\n                if(b[i] == x)\n                        return i;\n        }\n        return -1;\n}\n\nvoid selection_sort(int a[],int n)\n{\n\tint i,j,temp;\n\n\tprintf("%d\\n", index_of(a, n, 1));\n\n        for (i = 0; i < n-1; i++) {\n                for (j = i + 1; j < n; j++) {\n                        if (a[i] > a[j]) {\n                                temp = a[i];\n                                a[i] = a[j];\n                                a[j] = temp;\n\n\t\t\t\tprintf("%d\\n", index_of(a, n, 1));\n        \t        }\n\t        }\n\t}\n}\n\nint main(int argc, char* argv[])\n{\n\nint x = 1;\nint a[3] = {3,x,2};\n\nselection_sort(a,3);\n\n\treturn 0;\n}\n'
p145
sg71
I1
sg72
(dp146
g74
(dp147
S'$x'
p148
g77
sS'$i0'
p149
g77
sS'$i1'
p150
g77
sS'$i2'
p151
g77
ssg80
(dp152
S'$y0'
p153
g77
sS'$y1'
p154
g77
sS'$y2'
p155
g77
sssg83
S'1\n0\n0\n'
p156
sg85
S'/home/jacobbl/SENG265/exercise2_download/codeAct_1.01/code_library/selection_sort_min_position_0'
p157
sg87
S'Input/output'
p158
sbasS'logged'
p159
I00
sS'log_dir'
p160
S''
sS'practice_mode'
p161
I01
sS'standalone'
p162
I00
sbs.