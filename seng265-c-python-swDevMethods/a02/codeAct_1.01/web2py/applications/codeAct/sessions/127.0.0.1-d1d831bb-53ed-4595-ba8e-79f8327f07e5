(dp1
S'login'
p2
S''
sS'question_timer'
p3
I1309760864
sS'answer_list'
p4
(lp5
(dp6
S'argvs'
p7
(dp8
sS'code'
p9
(dp10
sS'stdout'
p11
(dp12
S'$y0'
p13
S'0'
ssS'stdin'
p14
(dp15
sa(dp16
S'argvs'
p17
(dp18
sS'code'
p19
(dp20
sS'stdout'
p21
(dp22
S'$y0'
p23
S'1'
ssS'stdin'
p24
(dp25
sa(dp26
S'argvs'
p27
(dp28
sS'code'
p29
(dp30
sS'stdout'
p31
(dp32
S'$y0'
p33
S'0'
sS'$y1'
p34
S''
sS'$y2'
p35
S''
ssS'stdin'
p36
(dp37
sa(dp38
S'argvs'
p39
(dp40
sS'code'
p41
(dp42
sS'stdin'
p43
(dp44
sS'stdout'
p45
(dp46
S'$y0'
p47
S''
sS'$y1'
p48
S''
sS'$y2'
p49
S''
ssa(dp50
S'argvs'
p51
(dp52
sS'code'
p53
(dp54
S'$i2'
p55
S'1'
ssS'stdout'
p56
(dp57
sS'stdin'
p58
(dp59
sa(dp60
S'argvs'
p61
(dp62
sS'code'
p63
(dp64
S'$i1'
p65
S'20'
p66
ssS'stdout'
p67
(dp68
sS'stdin'
p69
(dp70
sa(dp71
S'argvs'
p72
(dp73
sS'code'
p74
(dp75
sS'stdout'
p76
(dp77
S'$y0'
p78
S'1'
ssS'stdin'
p79
(dp80
sa(dp81
S'argvs'
p82
(dp83
sS'code'
p84
(dp85
sS'stdout'
p86
(dp87
S'$y0'
p88
S'2'
ssS'stdin'
p89
(dp90
sa(dp91
S'argvs'
p92
(dp93
sS'code'
p94
(dp95
sS'stdout'
p96
(dp97
S'$y0'
p98
S'0'
sS'$y1'
p99
S'0'
sS'$y2'
p100
S''
ssS'stdin'
p101
(dp102
sa(dp103
S'argvs'
p104
(dp105
sS'code'
p106
(dp107
sS'stdin'
p108
(dp109
sS'stdout'
p110
(dp111
S'$y0'
p112
S'2'
sS'$y1'
p113
S'1'
sS'$y2'
p114
S'0'
ssa(dp115
S'argvs'
p116
(dp117
sS'code'
p118
(dp119
S'$i2'
p120
S'5'
ssS'stdout'
p121
(dp122
sS'stdin'
p123
(dp124
sa(dp125
S'argvs'
p126
(dp127
sS'code'
p128
(dp129
S'$i1'
p130
S'9'
ssS'stdin'
p131
(dp132
sS'stdout'
p133
(dp134
sa(dp135
S'argvs'
p136
(dp137
sS'code'
p138
(dp139
sS'stdin'
p140
(dp141
sS'stdout'
p142
(dp143
S'$y0'
p144
S'1'
ssa(dp145
S'argvs'
p146
(dp147
sS'code'
p148
(dp149
sS'stdin'
p150
(dp151
sS'stdout'
p152
(dp153
S'$y0'
p154
S'0'
ssa(dp155
S'argvs'
p156
(dp157
sS'code'
p158
(dp159
sS'stdin'
p160
(dp161
sS'stdout'
p162
(dp163
S'$y0'
p164
S'2'
sS'$y1'
p165
S''
sS'$y2'
p166
S''
ssa(dp167
S'argvs'
p168
(dp169
sS'code'
p170
(dp171
sS'stdin'
p172
(dp173
sS'stdout'
p174
(dp175
S'$y0'
p176
S'0'
sS'$y1'
p177
S'0'
sS'$y2'
p178
S''
ssa(dp179
S'argvs'
p180
(dp181
sS'code'
p182
(dp183
S'$i1'
p184
S'8'
ssS'stdout'
p185
(dp186
sS'stdin'
p187
(dp188
sa(dp189
S'argvs'
p190
(dp191
sS'code'
p192
(dp193
S'$i0'
p194
S'8'
ssS'stdout'
p195
(dp196
sS'stdin'
p197
(dp198
sasS'quiz'
p199
(ica_quiz
quiz
p200
(dp201
S'question_list'
p202
(lp203
(ica_question
input_output
p204
(dp205
S'stdin_template'
p206
S''
sg190
S''
sS'code_template'
p207
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n        swap_count = 0;\n\n        for (i = 0; i < n-1; i++) {\n           for (j = n-1; j > i; j--) {\n              if (a[j] < a[j-1]) {\n                 temp = a[j];\n                 a[j] = a[j-1];\n                 a[j-1] = temp;\n\n                 swap_count++;\n              }\n           }\n        }\n        printf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {13,21,111};\n\n        bubble_sort(a,3);\n\n\treturn 0;\n}\n'
p208
sS'mark'
p209
I1
sS'parameter_types'
p210
(dp211
S'code'
p212
(dp213
S'$i0'
p214
S'int'
p215
sS'$i1'
p216
g215
sS'$i2'
p217
g215
sS'$n0'
p218
g215
ssS'stdout'
p219
(dp220
S'$y0'
p221
g215
sssS'stdout_template'
p222
S'$y0\n'
p223
sS'path'
p224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/bubble_sort_swap_count_4'
p225
sS'type'
p226
S'Input/output'
p227
sba(ica_question
input_output
p228
(dp229
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n        swap_count = 0;\n\n        for (i = 0; i < n-1; i++) {\n           for (j = n-1; j > i; j--) {\n              if (a[j] < a[j-1]) {\n                 temp = a[j];\n                 a[j] = a[j-1];\n                 a[j-1] = temp;\n\n                 swap_count++;\n              }\n           }\n        }\n        printf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {2,1,3};\n\n        bubble_sort(a,2);\n\n\treturn 0;\n}\n'
p230
sg209
I1
sg210
(dp231
g212
(dp232
S'$i0'
p233
g215
sS'$i1'
p234
g215
sS'$i2'
p235
g215
sS'$n0'
p236
g215
ssg219
(dp237
S'$y0'
p238
g215
sssg222
S'$y0\n'
p239
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/bubble_sort_swap_count_1'
p240
sg226
S'Input/output'
p241
sba(ica_question
input_output
p242
(dp243
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,k,temp;\n        int theMin = a[0];\n\n        for (i = 1; i < 3; i++)\n           if (a[i] < theMin)\n              theMin = a[i];\n              \n        for (i = 0; i < n-1; i++)\n           for (j = n-1; j > i; j--)\n              if (a[j] < a[j-1]) {\n                 temp = a[j];\n                 a[j] = a[j-1];\n                 a[j-1] = temp;\n\n                 for (k = 0; k < 3; k++)\n                    if (a[k] == theMin)\n                       printf("%d\\n",k);\n                 }\n}\nint main(int argc, char* argv[])\n{\n        int a[3] = {10,8,6};\n\n        bubble_sort(a,2);\n\n\treturn 0;\n}\n'
p244
sg209
I1
sg210
(dp245
g212
(dp246
S'$i0'
p247
g215
sS'$i1'
p248
g215
sS'$i2'
p249
g215
sS'$n0'
p250
g215
ssg219
(dp251
S'$y0'
p252
S'string'
p253
sS'$y1'
p254
g253
sS'$y2'
p255
g253
sssg222
S'$y0\n$y1\n$y2\n'
p256
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/bubble_sort_min_position_2'
p257
sg226
S'Input/output'
p258
sba(ica_question
input_output
p259
(dp260
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,k,temp;\n        int theMin = a[0];\n\n        for (i = 1; i < 3; i++)\n           if (a[i] < theMin)\n              theMin = a[i];\n              \n        for (i = 0; i < n-1; i++)\n           for (j = n-1; j > i; j--)\n              if (a[j] < a[j-1]) {\n                 temp = a[j];\n                 a[j] = a[j-1];\n                 a[j-1] = temp;\n\n                 for (k = 0; k < 3; k++)\n                    if (a[k] == theMin)\n                       printf("%d\\n",k);\n                 }\n}\nint main(int argc, char* argv[])\n{\n        int a[3] = {2,4,6};\n\n        bubble_sort(a,3);\n\n\treturn 0;\n}\n'
p261
sg209
I1
sg210
(dp262
g212
(dp263
S'$i0'
p264
g215
sS'$i1'
p265
g215
sS'$i2'
p266
g215
sS'$n0'
p267
g215
ssg219
(dp268
S'$y0'
p269
g253
sS'$y1'
p270
g253
sS'$y2'
p271
g253
sssg222
S'$y0\n$y1\n$y2\n'
p272
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/bubble_sort_min_position_0'
p273
sg226
S'Input/output'
p274
sba(ica_question
find_the_failure
p275
(dp276
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,temp;\n\n        for (i = 0; i < n-1; i++) {\n           for (j = n-1; j > i; j--) {\n              if (a[j] < a[j-1]) {\n                 temp = a[i];\n                 a[i] = a[j-1];\n                 a[j-1] = temp;\n              }\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int i;\n        int a[3] = {1,2,$i2};\n\n        bubble_sort(a,3);\n\n        for(i = 0; i < 3; i++)\n           printf("%d\\n",a[i]);\n\n\treturn 0;\n}\n'
p277
sg209
I1
sg210
(dp278
g212
(dp279
S'$i0'
p280
g215
sS'$i1'
p281
g215
sS'$n0'
p282
g215
sS'$v1'
p283
g253
sS'$v0'
p284
g253
sS'$i2'
p285
g215
ssg219
(dp286
S'$y0'
p287
g253
sS'$y1'
p288
g253
sS'$y2'
p289
g253
sssg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/bubble_sort_bug_1'
p290
sg226
S'Find the failure'
p291
sba(ica_question
find_the_failure
p292
(dp293
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid bubble_sort(int a[],int n)\n{\n        int i,j,temp;\n\n        for (i = 0; i < n-1; i++) {\n           for (j = n-1; j > i; j--) {\n              if (a[j] < a[j-1]) {\n                 temp = a[j];\n                 a[j] = a[i];\n                 a[i] = temp;\n              }\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int i;\n        int a[3] = {1,$i1,18};\n\n        bubble_sort(a,3);\n\n        for(i = 0; i < 3; i++)\n           printf("%d\\n",a[i]);\n\n\treturn 0;\n}\n'
p294
sg209
I1
sg210
(dp295
g212
(dp296
S'$i0'
p297
g215
sS'$i1'
p298
g215
sS'$n0'
p299
g215
sS'$v1'
p300
g253
sS'$v0'
p301
g253
sS'$i2'
p302
g215
ssg219
(dp303
S'$y0'
p304
g253
sS'$y1'
p305
g253
sS'$y2'
p306
g253
sssg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/bubble_sort_bug_0'
p307
sg226
S'Find the failure'
p308
sba(ica_question
input_output
p309
(dp310
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n        swap_count = 0;\n\n        for (i = 1; i < n; i++) {\n           j = i;\n           while (j > 0 && a[j-1] > a[j]) {\n              temp = a[j];\n              a[j] = a[j-1];\n              a[j-1] = temp;\n              j--;\n\n              swap_count++;\n           }\n        }\n        printf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {32,12,91};\n\n        insertion_sort(a,3);\n\n\treturn 0;\n}\n'
p311
sg209
I1
sg210
(dp312
g212
(dp313
S'$i0'
p314
g215
sS'$i1'
p315
g215
sS'$i2'
p316
g215
ssg219
(dp317
S'$y0'
p318
g215
sssg222
S'$y0\n'
p319
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/insertion_sort_swap_count_1'
p320
sg226
S'Input/output'
p321
sba(ica_question
input_output
p322
(dp323
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n        swap_count = 0;\n\n        for (i = 1; i < n; i++) {\n           j = i;\n           while (j > 0 && a[j-1] > a[j]) {\n              temp = a[j];\n              a[j] = a[j-1];\n              a[j-1] = temp;\n              j--;\n\n              swap_count++;\n           }\n        }\n        printf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {31,27,27};\n\n        insertion_sort(a,3);\n\n\treturn 0;\n}\n'
p324
sg209
I1
sg210
(dp325
g212
(dp326
S'$i0'
p327
g215
sS'$i1'
p328
g215
sS'$i2'
p329
g215
ssg219
(dp330
S'$y0'
p331
g215
sssg222
S'$y0\n'
p332
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/insertion_sort_swap_count_3'
p333
sg226
S'Input/output'
p334
sba(ica_question
input_output
p335
(dp336
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,k,temp;\n        int theMin = a[0];\n\n        for (i = 1; i < 3; i++)\n           if (a[i] < theMin)\n              theMin = a[i];\n\n        for (i = 1; i < n; i++) {\n           j = i;\n           while (j > 0 && a[j-1] > a[j]) {\n              temp = a[j];\n              a[j] = a[j-1];\n              a[j-1] = temp;\n              j--;\n\n              for (k = 0; k < 3; k++)\n                 if (a[k] == theMin)\n                    printf("%d\\n",k);\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {48,2,24};\n\n        insertion_sort(a,3);\n\n\treturn 0;\n}\n'
p337
sg209
I1
sg210
(dp338
g212
(dp339
S'$i0'
p340
g215
sS'$i1'
p341
g215
sS'$i2'
p342
g215
sS'$n0'
p343
g215
ssg219
(dp344
S'$y0'
p345
g253
sS'$y1'
p346
g253
sS'$y2'
p347
g253
sssg222
S'$y0\n$y1\n$y2\n'
p348
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/insertion_sort_min_position_3'
p349
sg226
S'Input/output'
p350
sba(ica_question
input_output
p351
(dp352
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,k,temp;\n        int theMin = a[0];\n\n        for (i = 1; i < 3; i++)\n           if (a[i] < theMin)\n              theMin = a[i];\n\n        for (i = 1; i < n; i++) {\n           j = i;\n           while (j > 0 && a[j-1] > a[j]) {\n              temp = a[j];\n              a[j] = a[j-1];\n              a[j-1] = temp;\n              j--;\n\n              for (k = 0; k < 3; k++)\n                 if (a[k] == theMin)\n                    printf("%d\\n",k);\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {39,28,17};\n\n        insertion_sort(a,3);\n\n\treturn 0;\n}\n'
p353
sg209
I1
sg210
(dp354
g212
(dp355
S'$i0'
p356
g215
sS'$i1'
p357
g215
sS'$i2'
p358
g215
sS'$n0'
p359
g215
ssg219
(dp360
S'$y0'
p361
g253
sS'$y1'
p362
g253
sS'$y2'
p363
g253
sssg222
S'$y0\n$y1\n$y2\n'
p364
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/insertion_sort_min_position_1'
p365
sg226
S'Input/output'
p366
sba(ica_question
find_the_failure
p367
(dp368
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,temp;\n        for (i = 1; i < n; i++) {\n       j = i;\n           while (j > 0 && a[j-1] > a[j]) {\n                 temp = a[i];\n                 a[i] = a[j-1];\n                 a[j-1] = temp;\n              j--;\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int i;\n        int a[3] = {6,7,$i2};\n\n        insertion_sort(a,3);\n\n        for(i = 0; i < 3; i++)\n           printf("%d\\n",a[i]);\n\n\treturn 0;\n}\n'
p369
sg209
I1
sg210
(dp370
g212
(dp371
S'$i0'
p372
g215
sS'$i1'
p373
g215
sS'$n0'
p374
g215
sS'$v1'
p375
g253
sS'$v0'
p376
g253
sS'$i2'
p377
g215
ssg219
(dp378
S'$y0'
p379
g253
sS'$y1'
p380
g253
sS'$y2'
p381
g253
sssg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/insertion_sort_bug_1'
p382
sg226
S'Find the failure'
p383
sba(ica_question
find_the_failure
p384
(dp385
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid insertion_sort(int a[],int n)\n{\n        int i,j,temp;\n        for (i = 1; i < n; i++) {\n       j = i;\n           while (j > 0 && a[j-1] > a[j]) {\n                 temp = a[j];\n                 a[j] = a[i];\n                 a[i] = temp;\n              j--;\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int i;\n        int a[3] = {4,$i1,6};\n\n        insertion_sort(a,3);\n\n        for(i = 0; i < 3; i++)\n           printf("%d\\n",a[i]);\n\n\treturn 0;\n}\n'
p386
sg209
I1
sg210
(dp387
g212
(dp388
S'$i0'
p389
g215
sS'$i1'
p390
g215
sS'$n0'
p391
g215
sS'$v1'
p392
g253
sS'$v0'
p393
g253
sS'$i2'
p394
g215
ssg219
(dp395
S'$y0'
p396
g253
sS'$y1'
p397
g253
sS'$y2'
p398
g253
sssg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/insertion_sort_bug_0'
p399
sg226
S'Find the failure'
p400
sba(ica_question
input_output
p401
(dp402
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n        swap_count = 0;\n\n        for (i = 0; i < n-1; i++) {\n           for (j = i + 1; j < n; j++) {\n              if (a[i] > a[j]) {\n                 temp = a[i];\n                 a[i] = a[j];\n                 a[j] = temp;\n\n                 swap_count++;\n              }\n           }\n        }\n        printf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {31,27,27};\n\n        selection_sort(a,2);\n\n\treturn 0;\n}\n'
p403
sg209
I1
sg210
(dp404
g212
(dp405
S'$i0'
p406
g215
sS'$i1'
p407
g215
sS'$i2'
p408
g215
sS'$n0'
p409
g215
ssg219
(dp410
S'$y0'
p411
g215
sssg222
S'$y0\n'
p412
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/selection_sort_swap_count_3'
p413
sg226
S'Input/output'
p414
sba(ica_question
input_output
p415
(dp416
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,temp,swap_count;\n\n        swap_count = 0;\n\n        for (i = 0; i < n-1; i++) {\n           for (j = i + 1; j < n; j++) {\n              if (a[i] > a[j]) {\n                 temp = a[i];\n                 a[i] = a[j];\n                 a[j] = temp;\n\n                 swap_count++;\n              }\n           }\n        }\n        printf("%d\\n", swap_count);\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {30,92,61};\n\n        selection_sort(a,1);\n\n\treturn 0;\n}\n'
p417
sg209
I1
sg210
(dp418
g212
(dp419
S'$i0'
p420
g215
sS'$i1'
p421
g215
sS'$i2'
p422
g215
sS'$n0'
p423
g215
ssg219
(dp424
S'$y0'
p425
g215
sssg222
S'$y0\n'
p426
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/selection_sort_swap_count_2'
p427
sg226
S'Input/output'
p428
sba(ica_question
input_output
p429
(dp430
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,k,temp;\n        int theMin = a[0];\n\n        for (i = 1; i < 3; i++)\n           if (a[i] < theMin)\n              theMin = a[i];\n\n        for (i = 0; i < n-1; i++)\n           for (j = i + 1; j < n; j++)\n              if (a[i] > a[j]) {\n                 temp = a[i];\n                 a[i] = a[j];\n                 a[j] = temp;\n\n                 for (k = 0; k < 3; k++)\n                    if (a[k] == theMin)\n                       printf("%d\\n",k);\n              }\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {39,28,17};\n\n        selection_sort(a,2);\n\n\treturn 0;\n}\n'
p431
sg209
I1
sg210
(dp432
g212
(dp433
S'$i0'
p434
g215
sS'$i1'
p435
g215
sS'$i2'
p436
g215
sS'$n0'
p437
g215
ssg219
(dp438
S'$y0'
p439
g253
sS'$y1'
p440
g253
sS'$y2'
p441
g253
sssg222
S'$y0\n$y1\n$y2\n'
p442
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/selection_sort_min_position_2'
p443
sg226
S'Input/output'
p444
sba(ica_question
input_output
p445
(dp446
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,k,temp;\n        int theMin = a[0];\n\n        for (i = 1; i < 3; i++)\n           if (a[i] < theMin)\n              theMin = a[i];\n\n        for (i = 0; i < n-1; i++)\n           for (j = i + 1; j < n; j++)\n              if (a[i] > a[j]) {\n                 temp = a[i];\n                 a[i] = a[j];\n                 a[j] = temp;\n\n                 for (k = 0; k < 3; k++)\n                    if (a[k] == theMin)\n                       printf("%d\\n",k);\n              }\n}\n\nint main(int argc, char* argv[])\n{\n        int a[3] = {48,2,24};\n\n        selection_sort(a,3);\n\n\treturn 0;\n}\n'
p447
sg209
I1
sg210
(dp448
g212
(dp449
S'$i0'
p450
g215
sS'$i1'
p451
g215
sS'$i2'
p452
g215
sS'$n0'
p453
g215
ssg219
(dp454
S'$y0'
p455
g253
sS'$y1'
p456
g253
sS'$y2'
p457
g253
sssg222
S'$y0\n$y1\n$y2\n'
p458
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/selection_sort_min_position_3'
p459
sg226
S'Input/output'
p460
sba(ica_question
find_the_failure
p461
(dp462
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,temp;\n           for (i = 0; i < n-1; i++) {\n              for (j = i + 1; j < n; j++) {\n                 if (a[i] > a[j]) {\n                    temp = a[i];\n                    a[i] = a[j-1];\n                    a[j-1] = temp;\n              }\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int i;\n        int a[3] = {3,$i1,6};\n\n        selection_sort(a,3);\n\n        for(i = 0; i < 3; i++)\n           printf("%d\\n",a[i]);\n\n\treturn 0;\n}\n'
p463
sg209
I1
sg210
(dp464
g212
(dp465
S'$i0'
p466
g215
sS'$i1'
p467
g215
sS'$n0'
p468
g215
sS'$v1'
p469
g253
sS'$v0'
p470
g253
sS'$i2'
p471
g215
ssg219
(dp472
S'$y0'
p473
g253
sS'$y1'
p474
g253
sS'$y2'
p475
g253
sssg222
S'2\n'
p476
sg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/selection_sort_bug_0'
p477
sg226
S'Find the failure'
p478
sba(ica_question
find_the_failure
p479
(dp480
g206
S''
sg190
S''
sg207
S'#include &lt;stdio.h>\n\nvoid selection_sort(int a[],int n)\n{\n        int i,j,temp;\n           for (i = 0; i < n-1; i++) {\n              for (j = i + 1; j < n; j++) {\n                 if (a[i] > a[j]) {\n                    temp = a[j];\n                    a[j] = a[j-1];\n                    a[j-1] = temp;\n              }\n           }\n        }\n}\n\nint main(int argc, char* argv[])\n{\n        int i;\n        int a[3] = {$i0,4,4};\n\n        selection_sort(a,2);\n\n        for(i = 0; i < 3; i++)\n           printf("%d\\n",a[i]);\n\n\treturn 0;\n}\n'
p481
sg209
I1
sg210
(dp482
g212
(dp483
S'$i0'
p484
g215
sS'$i1'
p485
g215
sS'$n0'
p486
g215
sS'$v1'
p487
g253
sS'$v0'
p488
g253
sS'$i2'
p489
g215
ssg219
(dp490
S'$y0'
p491
g253
sS'$y1'
p492
g253
sS'$y2'
p493
g253
sssg224
S'/home/derek/Dropbox/SEng265-Share/pe2/codeAct_1.01/code_library/selection_sort_bug_3'
p494
sg226
S'Find the failure'
p495
sbasS'logged'
p496
I00
sS'log_dir'
p497
S''
sS'practice_mode'
p498
I01
sS'standalone'
p499
I00
sbs.